name: CI Workflow

on:
  push:
    branches:
      - master # Trigger the workflow on pushes to the main branch
  pull_request:
env:
  IMAGE_NAME: iam-system

jobs:
  build-and-push-docker:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    services:
      mysql:
        image: mysql:8.0
        ports:
          - 3306:3306
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: iam_system_db
        options: >-
          --health-cmd="mysqladmin ping -h localhost"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Set up JDK for Gradle
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Grant execute permission for Gradle Wrapper
        run: chmod +x ./gradlew

      # Step 3: Cache Gradle dependencies
      - name: Cache Gradle dependencies
        uses: actions/cache@v4
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # Step 4: Run Gradle tests
      - name: Run Gradle tests
        run: ./gradlew clean test

      - name: Extract Project Version
        id: project-version
        run: echo "VERSION=$(grep "version =" build.gradle | awk -F"'" '{print $2}')" >> $GITHUB_ENV

      # Step 5: Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 6: Build the Docker image
      - name: Debug Docker Image Name Variables
        run: |
          echo "DOCKER_REPOSITORY: ${{ vars.DOCKER_REPOSITORY }}"
          echo "IMAGE_NAME: ${{ env.IMAGE_NAME }}"
          echo "VERSION: ${{ env.VERSION }}"
          echo "Full Image Name Attempt: ${{ vars.DOCKER_REPOSITORY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}"
      - name: Build Docker image
        run: |
          ./gradlew bootBuildImage --imageName ${{ vars.DOCKER_REPOSITORY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}
          docker tag ${{ vars.DOCKER_REPOSITORY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }} ${{ vars.DOCKER_REPOSITORY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}

      # Step 7: Push the Docker image
      - name: Push Docker image
        run: docker push ${{ vars.DOCKER_REPOSITORY }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}

      - name: Logout from Docker Hub
        run: docker logout